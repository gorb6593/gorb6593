p.48 ~ 69
변수(variable)
	저장 공간(하나의 값을 저장할 수 있는 저장공간)

변수타입 변수이름; (변수를 선언하는 방법) 
ex) int x; (int라는 변수타입에 x라는 변수를 선언)
	x = 5; (x라는 저장공간에 5라는 값을 저장)
	
	=> int x = 5; 라고 나타냄
	
변수 타입 int(정수), double(실수), char(문자), String(문자)

ex) char ch = 'j'; (문자 하나는 작은 따옴표, 2개 이상은 큰 따옴표)
ex) String name = "JAVA"; //(String이라는 변수타입에 name이라는 저장공간을 만들고 그 안에 JAVA를 저장)

p.83 ~ 

Math.round() 반올림
0.0 <= Math.random() < 1.0 

switch(조건식){
	case 값1 :
	break;
	case 값2 :
	break;
	
}

p. 130 
배열(array)
	같은 타입의 여러 변수를 하나의 묶음으로 나타낸 것
	
타입[] 변수이름; (배열을 선언하는 방법)
변수이름 = new 타입[길이]; (배열을 생성)
ex) int[] score;
ex) score = new int[5];

=> int[] socre = new int[5]; 라고 나타냄

p. 132
생성된 배열의 각 저장공간을 '배열의 요소(element)'라고 한다.
'배열이름[인덱스]'의 형식으로 배열의 요소에 접근한다.
인덱스(index)는  배열의 요소마다 붙여진 일련번호 (각 요소를 구분하는데 사용된다.)
ex) score1, score2, score3 ... 인덱스는 0부터 시작한다.

ex) int[] score = new int[5]; 길이가 5일 int배열 인덱스는 0~4까지 5개

배열의 초기화 
1. int[] score = new int[5]; (길이가 5인 int형 배열을 생성)
2. for(int i=0;i<score.length;i++){
	score[i] = i;              
}
이런식으로 배열길이가 길면 for을 이용해서 작업.

크기가 작으면 
score[0] = 1;
score[1] = 2; 이렇게 직접작업

int[] score = new int[]{1,2,3,4,5}; 
이렇게 생성과 초기화를 동시에 해도 된다.
int[] score = int[]{1,2,3,4,5}; new는 생략가능 단, 생성과 초기화를 따로하면 생략불가능

배열의 출력
int[] iArr = {1,2,3,4,5};
for(int i=0;i<iArr.length;i++){
	System.out.println(iArr[i]);
}
System.out.println(); //줄바꿈
순서대로 출력가능

더 간단한 방법 (Arrays.toString(배열이름)) 메서드 사용하기 단, 사용시 import.java.util.Arrays;를 추가 (ctrl+shift+o) 단축키

int[] iArr = {1,2,3,4,5};
System.out.println(Arrays.toString(iArr));
순서대로 출력

문자는 String[] name = new String[3]; //3개의 문자열을 담을 수 있는 배열을 생성한다.
name[0] = "Kim";
name[1] = "Lee";
name[2] = "Park";
또는
String[] name = new String[]{"Kim","Lee","Park"};
얘는 new String[]을 생략할 수 있음 즉, 
String[] name = {"Kim","Lee","Park"}; 이렇게 표현한다.

p.160
객체지향언어
	코드 간에 서로 괜계를 맺어 유기적으로 구성

클래스
	객체를 정의해놓은 것. / 객체의 설계도 
	
객체는 일반적으로 다수의 속성과 다수의 기능을 갖는다.
속성(property) -> 멤버변수(variable)
기능(function) -> 메서드(method)

인스턴스화
	클래스로부터 객체를 만드는 과정 

인스턴스
	클래스로부터 만들어진 객체
	
객체의 생성과 사용
클래스명 변수명; // 클래스의 객체를 참조하기 위해 참조변수 선언
변수명 = new 클래스명(); // 클래스의 객체를 생성 후, 객체의 주소를 참조변수에 저장

ex) Tv t;
	t = new Tv();
Tv t = new Tv();

Tv[] trArr = new Tv[3]; 
tvArr[0] = new Tv();
tvArr[1] = new Tv();
tvArr[2] = new Tv();

p.176
메서드(method)
	특정 작업을 수행하는 일련의 문장들을 하나로 묶은 것
	
int add(int x, int y){
	int result = x + y;
	return result; //반환값이 없으면 void를 적는다
	
메서드 선언부 다음에 오는 괄호{}를 '메서드의 구현부'라고 한다.

메서드 호출 
	메서드이름(값1, 값2, ...);
	
}

p.195 
생성자(constructor)
	인스턴스가 생성될 때 호출되는 '인스턴스 초기화 메서드'




